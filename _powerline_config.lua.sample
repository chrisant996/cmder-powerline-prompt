----------------
-- CONFIGURATION
----------------
-- Config file is "_powerline_config.lua".
-- Sample config file is "_powerline_config.lua.sample".
--
-- Configurations are stored as variables.
-- Each variable is usually named in this pattern:
--   plc_<addon>_<property>
-- Where 'plc' is short for 'powerline config'.
-- Ex: plc_prompt_type is a variable for the prompt addon for specifying
-- the type of prompt to show.


---------------------------
-- HOW TO SET CONFIG VALUES
---------------------------
-- Always keep the _powerline_config.lua.sample file to restore to if your
-- config got messed up.
--
-- Copy _powerline_config.lua.sample to _powerline_config.lua and uncomment
-- variables you want to set/change.
--
-- Colors must be expressed as tables that set foreground= and background=
-- using ANSI color escape codes.  The value should be the SGR parameters of
-- the "ESC[...m" code.  Both foreground and background colors are needed so
-- the segment dividers can be displayed properly.  See powerline.lua
-- for more info on colors.


-- GENERAL ----------------------------------------------------------------

---- Whether to use "simple" mode:
----  * Applies segment background color to foreground.
----  * Always uses the default as the background.
----  * Uses spaces instead of fancy segment separators.
----  * Ends the prompt with a simple character (vs a segment separator).
--plc_simple = false
--plc_prompt_simpleClose = ">"

---- Whether to add plc_prompt_lambSymbol on a new line under the prompt.
---- Use true or false.
---- Default is true.
--plc_prompt_useLambSymbol = false

---- Symbol displayed in the new line below the prompt when
---- plc_prompt_lambSymbol is true.
--plc_prompt_lambSymbol = "Œª"

---- Colors for plc_prompt_lambSymbol.
---- Use the ANSI Fg and Bg colors from powerline.lua.
--plc_prompt.lambTextColor = ansiFgBold
--plc_prompt.lambFillColor = ansiBgClrDefault

---- Symbol connecting each segment of the prompt.  Be careful when
---- changing this.
--plc_prompt_arrowSymbol = "ÓÇ∞"
--plc_prompt_leftArrowSymbol = "ÓÇ≤"

---- Version control (git, hg, etc) branch symbol.  Used to indicate the
---- name of a branch.
--plc_git_branchSymbol = "ÓÇ†"

---- Version control (git, hg, etc) conflict symbol. Used to indicate
---- there's a conflict.
--plc_git_conflictSymbol = "!"


-- CWD PROMPT module ------------------------------------------------------

---- NOTE:  If the original %PROMPT% string starts with $+ then the cwd
---- segment includes the "+" signs corresponding to the pushd stack depth.

---- Whether the displayed prompt is the full path or only the folder name.
---- Use:
----   "full" for full path like C:\Windows\System32.
----   "folder" for folder name only like System32.
----   "smart" to switch in git repo to folder name instead of full path.
---- Default is "smart".
--plc_prompt_type = "full"

---- Whether to show ~ instead of the full path to the user's home folder.
---- Default is true and "~".
--plc_prompt_useHomeSymbol = false
--plc_prompt_homeSymbol = "~"

---- Colors for the cwd prompt segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_prompt.textColor = colorWhite
--plc_prompt.fillColor = colorBlue


-- BATTERY module ---------------------------------------------------------

---- NOTE:  When the terminal supports extended Xterm color escape codes,
---- the battery module automatically represents the battery level with a
---- color from a gradient from green to yellow to red.

---- Whether to put the battery level in the date segment.
---- When false, the battery level indicator is colored according to the charge level.
---- Use true or false.
---- Default is false.
--plc_battery_withDate = true

---- Hide the battery segment above this charge level.
---- Use nil, or 1 to 100.
---- nil never shows the battery level (and doesn't even get the battery level).
---- 100 always shows the battery level.
---- Default is nil.
--plc_battery_showLevel = 100

---- Battery low level (use red color).
---- Use 1 to 100.
---- Default is 20.
--plc_battery_lowLevel = 10

---- Battery medium level (use yellow color).
---- Use 1 to 100.
---- Default is 40.
--plc_battery_mediumLevel = 25

---- Symbol for battery level.
--plc_battery_levelSymbol = "%"

---- Symbol for battery charging indicator.
--plc_battery_chargingSymbol = "‚ö°" -- Unicode "high voltage" character (the default).
--plc_battery_chargingSymbol = "ÔÉß" -- Charging indicator in 'Anonymous Powerline' font.


-- DATE module ------------------------------------------------------------

---- Where (and whether) to show the date.
---- Use:
----   "above" to show the date in a separate line above the powerline prompt.
----   "right" to show the date in a rightmost segment.
----   "normal" to show the date in a normal segment.
----   nil to not show the date.
---- Default is nil.
--plc_date_position = "normal"

---- The date format to use.
---- Refer to https://www.lua.org/pil/22.1.html for references.
---- Default is "%a %x  %X" when plc_date_position is "above".
---- Default is "%a %H:%M" when plc_date_position is "normal" or "right".
--plc_date_format = "%A %B %d, %Y  %I:%M %p"

---- Colors for the date segment, except when position is "above".
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_date.textColor = colorBlack
--plc_date.fillColor = colorBrightBlack

---- Colors for the date segment, when position is "above".
--plc_date.above_textColor = colorDefault
--plc_date.above_fillColor = colorDefault


-- GIT module -------------------------------------------------------------

---- Whether to show detailed operation counts in the git prompt.
---- Use true or false.
---- Default is false.
--plc_git_status_details = true

---- Whether to include summary of staged files. This is usually fast.
---- Use true or false.
---- Default is true.
--plc_git_staged = false

---- Whether to include summary of ahead/behind commits. This can take some time to compute.
---- Use true or false.
---- Default is false.
--plc_git_aheadbehind = true

---- Colors for the git segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_git.clean_textColor = colorBlack
--plc_git.clean_fillColor = colorGreen
--plc_git.dirty_textColor = colorBlack
--plc_git.dirty_fillColor = colorYellow
--plc_git.conflict_textColor = colorBrightWhite
--plc_git.conflict_fillColor = colorRed
--plc_git.staged_textColor = colorBlack
--plc_git.staged_fillColor = colorMagenta
--plc_git.remote_textColor = colorBlack
--plc_git.remote_fillColor = colorCyan

---- Symbols for git local status.
--plc_git_addcountSymbol = "+"
--plc_git_modifycountSymbol = "*"
--plc_git_deletecountSymbol = "-"
--plc_git_renamecountSymbol = "üéÉ"
--plc_git_summarycountSymbol = "¬±"
--plc_git_untrackedcountSymbol = "?"

---- Symbols for git ahead/behind segment.
--plc_git_aheadbehindSymbol = "‚òÅ"
--plc_git_aheadcountSymbol = "‚Üì"
--plc_git_behindcountSymbol = "‚Üë"

---- Symbol for git staged segment.
--plc_git_stagedSymbol = "‚Üó"


-- HG (MERCURIAL) module --------------------------------------------------

---- Colors for the HG segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_hg.branch_textColor = colorBlack
--plc_hg.branch_fillColor = colorGreen
--plc_hg.dirty_textColor = colorWhite
--plc_hg.dirty_fillColor = colorRed

---- Hg changes symbol. Used to indicate there are changes.
---- You can use " ÓÄÉ " conflict symbol with 'Anonymous Powerline' font.
--plc_hg_changesSymbol = "ÓÄÉ"


-- NPM module -------------------------------------------------------------

---- Colors for the NPM segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_npm.textColor = colorWhite
--plc_npm.fillColor = colorCyan

---- Symbol used in the NPM segment as visual indicator.
--plc_npm_npmSymbol = "NPM"


-- MAVEN module -----------------------------------------------------------

---- Colors for the MAVEN segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_maven.textColor = colorWhite
--plc_maven.fillColor = colorCyan

---- Symbol used in the maven segment as visual indicator.
--plc_mvn_mvnSymbol = "MVN"


-- PYTHON module ----------------------------------------------------------

---- Colors for the PYTHON segment.
---- Use the colorBlack, colorRed, etc colors from powerline.lua.
--plc_python.textColor = colorWhite
--plc_python.fillColor = colorCyan

---- Whether to always show python virtual env, or only in directories which contain a .py file.
--plc_python_alwaysShow = false

---- Symbol used in the Python segment as visual indicator.
--plc_python_pythonSymbol = "Ô††"

