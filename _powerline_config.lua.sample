-- Configurations
-- Config file is "_powerline_config.lua"
-- Sample config file is "_powerline_config.lua.sample"

-- Configurations are stored as variables
-- Each variable is usually named in this pattern:
-- plc_<addon>_<property>
-- Where 'plc' is short for 'powerline config'
-- Ex: plc_prompt_type is variable for the prompt addon for specifying the type of prompt to show
-- Config for powerline core are named like this:
-- plc_core_<property>

---------------------------
-- HOW TO SET CONFIG VALUES
---------------------------
-- REQUIRED config values must have a value, even if it's an empty zero-length string.
-- OPTIONAL config values can be disabled by commenting the entry. Just add -- before the line.
-- Always keep the _powerline_config.lua.sample file to restore to if your config got messed up.


-- Behavior ------------------------------------------------------------------

--- REQUIRED. plc_prompt_type is whether the displayed prompt is the full path or only the folder name
 -- Use:
 -- "full" for full path like C:\Windows\System32
 -- "folder" for folder name only like System32
 -- "smart" to switch in git repo to folder name instead of full path 
 -- default is full
plc_prompt_type = "smart"

--- REQUIRED. plc_prompt_useHomeSymbol is whether to show ~ instead of the full path to the user's home folder
 -- Use true or false
 -- default is true
plc_prompt_useHomeSymbol = true

--- OPTIONAL. plc_prompt_useLambSymbol is whether to add plc_prompt_lambSymbol on a new line under the prompt.
 -- Use true or false (or nil)
 -- default is true
plc_prompt_useLambSymbol = true

--- OPTIONAL. Whether to show the date.
 -- Use:
 -- "above" to show the date in a separate line above the powerline prompt
 -- "left" to show the date in a leftmost segment
 -- "right" to show the date in a rightmost segment
 -- or use nil for no date
 -- default is nil
plc_date_position = nil

--- OPTIONAL. The date format to use.
 -- Refer to https://www.lua.org/pil/22.1.html for references
 -- default is "%a %x  %X" when plc_date_position is "above"
 -- default is "%a %H:%M" when plc_date_position is "left" or "right"
--plc_date_format = "%A %B %d, %Y  %I:%M %p"

--- OPTIONAL. Whether to show detailed operation counts in the git prompt.
 -- Use true or false (or nil)
 -- default is false
plc_git_status_details = false

--- OPTIONAL. Whether to include summary of staged files. This is usually fast.
 -- Use true or false (or nil)
 -- default is true
plc_git_staged = true

--- OPTIONAL. Whether to include summary of ahead/behind commits. This can take some time to compute.
 -- Use true or false (or nil)
 -- default is false
plc_git_aheadbehind = false


-- Symbols -------------------------------------------------------------------

-- REQUIRED. Prompt displayed instead of user's home folder e.g. C:\Users\username
plc_prompt_homeSymbol = "~"

-- REQUIRED. Symbol connecting each segment of the prompt. Be careful before you change this.
plc_prompt_arrowSymbol = "ÓÇ∞"

-- REQUIRED. Symbol displayed in the new line below the prompt.
plc_prompt_lambSymbol = "Œª"

-- REQUIRED. Version control (e.g. Git) branch symbol. Used to indicate the name of a branch.
plc_git_branchSymbol = "ÓÇ†"

-- REQUIRED. Version control (e.g. Git) conflict symbol. Used to indicate there's a conflict.
plc_git_conflictSymbol = "!"

-- REQUIRED. Symbols for git local status.
plc_git_addcountSymbol = "+"
plc_git_modifycountSymbol = "*"
plc_git_deletecountSymbol = "-"
plc_git_renamecountSymbol = "üéÉ"
plc_git_summarycountSymbol = "¬±"
plc_git_untrackedcountSymbol = "?"

-- OPTIONAL. Symbol for git ahead/behind segment.
plc_git_aheadbehindSymbol = "‚òÅ"

-- REQUIRED. Symbol for git ahead commit count.
plc_git_aheadcountSymbol = "‚Üì"

-- REQUIRED. Symbol for git behind commit count.
plc_git_behindcountSymbol = "‚Üë"

-- OPTIONAL. Symbol for git staged segment.
plc_git_stagedSymbol = "‚Üó"

-- OPTIONAL. Git symbol used in the folder segment when 'smart' prompt is used and the user navigates to a folder with Git repo
--plc_prompt_gitSymbol = "GIT"

-- REQUIRED. Hg branch symbol. Used to indicate the name of a branch 
plc_hg_branchSymbol = "ÓÇ†"

-- REQUIRED. Hg conflict symbol. Used to indicate there's a conflict.
plc_hg_conflictSymbol = "!"
-- You can use " ÓÄÉ " conflict symbol with 'Anonymous Powerline' font.

-- OPTIONAL. npm Symbol used in the NPM segment as visual indicator.
--plc_npm_npmSymbol = "NPM"
